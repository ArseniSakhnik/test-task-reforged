[{"D:\\TestProject\\frontend-test-task\\src\\index.js":"1","D:\\TestProject\\frontend-test-task\\src\\components\\App\\App.js":"2","D:\\TestProject\\frontend-test-task\\src\\components\\Navbar\\index.js":"3","D:\\TestProject\\frontend-test-task\\src\\components\\Navbar\\navbar.js":"4","D:\\TestProject\\frontend-test-task\\src\\components\\Authorization\\index.js":"5","D:\\TestProject\\frontend-test-task\\src\\components\\Authorization\\authorization.js":"6","D:\\TestProject\\frontend-test-task\\src\\Services\\UserService\\index.js":"7","D:\\TestProject\\frontend-test-task\\src\\Services\\UserService\\UserService.js":"8","D:\\TestProject\\frontend-test-task\\src\\components\\Error\\index.js":"9","D:\\TestProject\\frontend-test-task\\src\\components\\Error\\error.js":"10","D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\index.js":"11","D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\companyList.js":"12","D:\\TestProject\\frontend-test-task\\src\\Services\\CompanyService\\index.js":"13","D:\\TestProject\\frontend-test-task\\src\\Services\\CompanyService\\CompanyService.js":"14","D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RedactModalWindow\\index.js":"15","D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RedactModalWindow\\redactModalWindow.js":"16","D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RemoveModalWindow\\index.js":"17","D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RemoveModalWindow\\removeModalWindow.js":"18","D:\\TestProject\\frontend-test-task\\src\\components\\QuotationList\\quotationList.js":"19","D:\\TestProject\\frontend-test-task\\src\\Services\\QuototationService\\index.js":"20","D:\\TestProject\\frontend-test-task\\src\\Services\\QuototationService\\QuotationService.js":"21","D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\index.js":"22","D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\chartPage.js":"23","D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\Chart\\index.js":"24","D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\Chart\\chart.js":"25"},{"size":405,"mtime":1612273495395,"results":"26","hashOfConfig":"27"},{"size":1340,"mtime":1612472012833,"results":"28","hashOfConfig":"27"},{"size":52,"mtime":1612273089790,"results":"29","hashOfConfig":"27"},{"size":3502,"mtime":1612472044335,"results":"30","hashOfConfig":"27"},{"size":73,"mtime":1612280494013,"results":"31","hashOfConfig":"27"},{"size":4305,"mtime":1612351621579,"results":"32","hashOfConfig":"27"},{"size":67,"mtime":1612282699731,"results":"33","hashOfConfig":"27"},{"size":721,"mtime":1612309648589,"results":"34","hashOfConfig":"27"},{"size":49,"mtime":1612291489519,"results":"35","hashOfConfig":"27"},{"size":221,"mtime":1612291478112,"results":"36","hashOfConfig":"27"},{"size":67,"mtime":1612350855513,"results":"37","hashOfConfig":"27"},{"size":4837,"mtime":1612466239403,"results":"38","hashOfConfig":"27"},{"size":76,"mtime":1612359660837,"results":"39","hashOfConfig":"27"},{"size":1376,"mtime":1612385597686,"results":"40","hashOfConfig":"27"},{"size":85,"mtime":1612371403395,"results":"41","hashOfConfig":"27"},{"size":3803,"mtime":1612385141753,"results":"42","hashOfConfig":"27"},{"size":85,"mtime":1612386496110,"results":"43","hashOfConfig":"27"},{"size":1524,"mtime":1612392204503,"results":"44","hashOfConfig":"27"},{"size":2426,"mtime":1612473099939,"results":"45","hashOfConfig":"27"},{"size":82,"mtime":1612463207034,"results":"46","hashOfConfig":"27"},{"size":1140,"mtime":1612490236238,"results":"47","hashOfConfig":"27"},{"size":61,"mtime":1612471725570,"results":"48","hashOfConfig":"27"},{"size":2915,"mtime":1612490931386,"results":"49","hashOfConfig":"27"},{"size":49,"mtime":1612471742961,"results":"50","hashOfConfig":"27"},{"size":4027,"mtime":1612488189744,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1nv3lcx",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\TestProject\\frontend-test-task\\src\\index.js",[],["106","107"],"D:\\TestProject\\frontend-test-task\\src\\components\\App\\App.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\Navbar\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\Navbar\\navbar.js",["108","109","110","111","112","113"],"D:\\TestProject\\frontend-test-task\\src\\components\\Authorization\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\Authorization\\authorization.js",["114"],"import React, {useState, useEffect} from 'react'\r\nimport Navbar from \"../Navbar\"\r\nimport Error from \"../Error\"\r\nimport UserService from \"../../Services/UserService\"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './authorizationWindow.css'\r\n\r\n\r\nexport default function Authorization() {\r\n\r\n    const userService = new UserService()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const onUsernameChanged = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const onPasswordChanged = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        userService.authentication(username, password)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                localStorage.setItem('userData', JSON.stringify(response.data))\r\n                // window.location.reload()\r\n            })\r\n            .catch((e) => {\r\n                console.log('error')\r\n                console.log(e.message)\r\n                if (e.message === 'Request failed with status code 400') {\r\n                    setError('Неправильный логин или пароль')\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleSubmitCheck = (event) => {\r\n        userService.getTest()\r\n            .then(response => {\r\n                console.log(response)\r\n            })\r\n            .catch((response) => {\r\n                console.log('error')\r\n                console.log(response)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'authorize'}>\r\n            <Navbar/>\r\n            <div className=\"container authorizationForm\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 mx-auto\">\r\n                        <div id=\"first\">\r\n                            <div className=\"myform form \">\r\n                                <div className=\"logo mb-3\">\r\n                                    <h1 className=\"greetingLabel\">Добро пожаловать на биржу</h1>\r\n                                </div>\r\n                                <form action=\"\" method=\"post\" name=\"login\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Логин</label>\r\n                                        <input type=\"text\"\r\n                                               name=\"email\"\r\n                                               className=\"form-control form-input\"\r\n                                               aria-describedby=\"emailHelp\"\r\n                                               value={username}\r\n                                               onChange={onUsernameChanged}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Пароль</label>\r\n                                        <input type=\"password\"\r\n                                               name=\"password\"\r\n                                               className=\"form-control form-input\"\r\n                                               aria-describedby=\"emailHelp\"\r\n                                               value={password}\r\n                                               onChange={onPasswordChanged}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-center \">\r\n                                        <button type=\"submit\" className=\" btn btn-warning btn-primary myBtn\">Войти\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                                {error.length > 0 ? <Error errorMessage={error}/> : <></> }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className={'warning'} onClick={handleSubmitCheck}>TEST</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\TestProject\\frontend-test-task\\src\\Services\\UserService\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\Services\\UserService\\UserService.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\Error\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\Error\\error.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\companyList.js",["115"],"D:\\TestProject\\frontend-test-task\\src\\Services\\CompanyService\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\Services\\CompanyService\\CompanyService.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RedactModalWindow\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RedactModalWindow\\redactModalWindow.js",["116","117","118","119","120"],"import React, {useState, useEffect} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './redactModalWindow.css'\r\n\r\nexport default function RedactModalWindow({type, id, name, ticker, changeCompany}) {\r\n\r\n    const [companyName, setCompanyName] = useState(name)\r\n    const [companyTicker, setCompanyTicker] = useState(ticker)\r\n    const [buttonClasses, setButtonClasses] = useState(\"btn btn-primary save-button btn-warning first-style-button\")\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCompanyName(name)\r\n        setCompanyTicker(ticker)\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        if (companyName.length == 0 || companyTicker.length == 0) {\r\n            setButtonClasses(\"btn btn-primary save-button btn-warning disabled-button\")\r\n            setDisabled(true)\r\n        } else {\r\n            setButtonClasses(\"btn btn-primary save-button btn-warning first-style-button\")\r\n            setDisabled(false)\r\n        }\r\n    }, [companyTicker, companyName])\r\n\r\n    const onCompanyNameChanged = (event) => {\r\n        setCompanyName(event.target.value)\r\n    }\r\n\r\n    const onCompanyTickerChanged = (event) => {\r\n        setCompanyTicker(event.target.value)\r\n    }\r\n\r\n    const onRedactSubmit = (event) => {\r\n        event.preventDefault()\r\n        changeCompany(id, companyName, companyTicker)\r\n    }\r\n\r\n    const onAddSubmit = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"redactModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n             aria-hidden=\"true\" data-toggle=\"modal\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-body\">\r\n                        <h2 className='modalWindowHeader'>{type == 'redact' ? 'Редактирование компании' : 'Добавление компании'}</h2>\r\n                        <form onSubmit={type == 'redact' ? onRedactSubmit : onAddSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label className='input-label-name'>Название компании</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={companyName}\r\n                                    onChange={onCompanyNameChanged}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className='input-label-ticker'>Тикер</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control companyTicker-input\"\r\n                                    value={companyTicker}\r\n                                    onChange={onCompanyTickerChanged}\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\" className={buttonClasses} disabled={disabled}>Сохранить</button>\r\n                            <button\r\n                                type='button'\r\n                                className=\"btn btn-primary cancel-button btn-warning second-style-button\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                            >Отменить</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RemoveModalWindow\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\CompanyList\\RemoveModalWindow\\removeModalWindow.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\QuotationList\\quotationList.js",["121"],"import React, {useState, useEffect} from 'react'\r\nimport Navbar from \"../Navbar\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './quototations.css'\r\nimport QuotationService from \"../../Services/QuototationService\";\r\n\r\nexport default function QuotationList() {\r\n\r\n    const quotationService = new QuotationService()\r\n\r\n    const [quotations, setQuotations] = useState([])\r\n\r\n    useEffect(() => {\r\n        quotationService.getLastQuotations()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setQuotations(response.data)\r\n            })\r\n            .catch((ex) => {\r\n                console.log(ex.message)\r\n            })\r\n    }, [])\r\n\r\n    const dataFormat = (data) => {\r\n        return data.substring(8, 10) + '.' + data.substring(5, 7) + '.' + data.substring(2, 4)\r\n    }\r\n\r\n    const row = () => {\r\n        return quotations.map(item => {\r\n            return (\r\n                <tr key={item.ticker}>\r\n                    <th scope=\"row\" className=\"quotes-table-company-name\">{item.companyName}</th>\r\n                    <td>{item.ticker}</td>\r\n                    <td>{item.price.toFixed(2)}\r\n                        <div\r\n                            className=\"quotes-table-rub\"> {item.currencyUnit === 'SUR' ? 'RUB' : item.currencyUnit}\r\n                        </div>\r\n                    </td>\r\n                    <td>{dataFormat(item.date)}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"quotes-page\">\r\n                <div className=' quotes-table'>\r\n                    <h1 className=\"quotes\">Котировки</h1>\r\n                    <table className=\"table quote-table-area\">\r\n                        <thead>\r\n                        <tr className=\"quotes-table-head\">\r\n                            <th scope=\"col\" className=\"quotes-table-company-name\">Компания</th>\r\n                            <th scope=\"col\">Тикер</th>\r\n                            <th scope=\"col\">Цена</th>\r\n                            <th scope=\"col\">Дата</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {row()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\TestProject\\frontend-test-task\\src\\Services\\QuototationService\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\Services\\QuototationService\\QuotationService.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\chartPage.js",["122"],"D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\Chart\\index.js",[],"D:\\TestProject\\frontend-test-task\\src\\components\\ChartPage\\Chart\\chart.js",["123","124","125","126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"135","line":10,"column":18,"nodeType":"133","messageId":"134","endLine":10,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":24,"column":25,"nodeType":"138","endLine":24,"endColumn":70},{"ruleId":"136","severity":1,"message":"139","line":29,"column":25,"nodeType":"138","endLine":29,"endColumn":55},{"ruleId":"136","severity":1,"message":"139","line":34,"column":25,"nodeType":"138","endLine":34,"endColumn":78},{"ruleId":"136","severity":1,"message":"139","line":66,"column":29,"nodeType":"138","endLine":68,"endColumn":75},{"ruleId":"131","severity":1,"message":"132","line":1,"column":26,"nodeType":"133","messageId":"134","endLine":1,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":27,"column":8,"nodeType":"142","endLine":27,"endColumn":10,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":16,"column":8,"nodeType":"142","endLine":16,"endColumn":12,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":19,"column":48,"nodeType":"148","messageId":"149","endLine":19,"endColumn":50},{"ruleId":"146","severity":1,"message":"147","line":19,"column":77,"nodeType":"148","messageId":"149","endLine":19,"endColumn":79},{"ruleId":"146","severity":1,"message":"147","line":51,"column":65,"nodeType":"148","messageId":"149","endLine":51,"endColumn":67},{"ruleId":"146","severity":1,"message":"147","line":52,"column":46,"nodeType":"148","messageId":"149","endLine":52,"endColumn":48},{"ruleId":"140","severity":1,"message":"150","line":23,"column":8,"nodeType":"142","endLine":23,"endColumn":10,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"150","line":22,"column":8,"nodeType":"142","endLine":22,"endColumn":10,"suggestions":"152"},{"ruleId":"131","severity":1,"message":"153","line":2,"column":64,"nodeType":"133","messageId":"134","endLine":2,"endColumn":70},{"ruleId":"131","severity":1,"message":"154","line":4,"column":9,"nodeType":"133","messageId":"134","endLine":4,"endColumn":16},{"ruleId":"131","severity":1,"message":"155","line":10,"column":12,"nodeType":"133","messageId":"134","endLine":10,"endColumn":22},{"ruleId":"140","severity":1,"message":"156","line":114,"column":8,"nodeType":"142","endLine":114,"endColumn":22,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'companyService'. Either include it or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has missing dependencies: 'name' and 'ticker'. Either include them or remove the dependency array. If 'setCompanyName' needs the current value of 'name', you can also switch to useReducer instead of useState and read 'name' in the reducer.",["161"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'quotationService'. Either include it or remove the dependency array.",["162"],["163"],"'Legend' is defined but never used.","'forEach' is defined but never used.","'quotations' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setDataToChart'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [companyService]",{"range":"174","text":"175"},"Update the dependencies array to be: [id, name, ticker]",{"range":"176","text":"177"},"Update the dependencies array to be: [quotationService]",{"range":"178","text":"179"},{"range":"180","text":"179"},"Update the dependencies array to be: [setDataToChart, ticker, time]",{"range":"181","text":"182"},[789,791],"[companyService]",[648,652],"[id, name, ticker]",[723,725],"[quotationService]",[657,659],[3454,3468],"[setDataToChart, ticker, time]"]