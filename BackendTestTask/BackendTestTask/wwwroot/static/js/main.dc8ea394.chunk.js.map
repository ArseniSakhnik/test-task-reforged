{"version":3,"sources":["components/Navbar/index.js","components/Navbar/navbar.js","components/Error/index.js","components/Error/error.js","Services/UserService/index.js","Services/UserService/UserService.js","components/Authorization/index.js","components/Authorization/authorization.js","Services/QuototationService/index.js","Services/QuototationService/QuotationService.js","components/QuotationList/quotationList.js","Services/CompanyService/index.js","Services/CompanyService/CompanyService.js","components/CompanyList/RedactModalWindow/index.js","components/CompanyList/RedactModalWindow/redactModalWindow.js","components/CompanyList/RemoveModalWindow/index.js","components/CompanyList/RemoveModalWindow/removeModalWindow.js","components/CompanyList/index.js","components/CompanyList/companyList.js","components/ChartPage/Chart/index.js","components/ChartPage/Chart/chart.js","components/ChartPage/index.js","components/ChartPage/chartPage.js","components/App/App.js","index.js"],"names":["Navbar","useState","localStorage","getItem","JSON","parse","username","name","logOut","removeItem","window","location","reload","console","log","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","pathname","href","includes","role","aria-haspopup","aria-labelledby","length","onClick","Error","errorMessage","UserService","_apiBase","authentication","password","axios","post","withCredentials","getTest","user","token","get","headers","Authorization","userService","setUsername","setPassword","error","setError","activeButton","setActiveButton","action","method","onSubmit","event","preventDefault","then","response","data","setItem","stringify","catch","e","message","aria-describedby","value","onChange","target","disabled","QuotationService","getLastQuotations","getQuotationByTickerAndDate","ticker","startDate","endDate","QuotationList","quotationService","quotations","setQuotations","useEffect","ex","scope","map","item","companyName","price","toFixed","currencyUnit","date","substring","CompanyService","getCompanies","companyPostRequest","link","removeCompany","toUpperCase","replace","addCompany","changeCompany","RedactModalWindow","setCompanyName","companyTicker","setCompanyTicker","buttonClasses","setButtonClasses","setDisabled","tabIndex","aria-hidden","data-dismiss","RemoveModalWindow","CompanyList","companyService","companies","setCompanies","rowData","setRowData","sendRowDataToModalWindow","alert","Chart","time","setData","dataFormat","setDataToChart","startYear","startMonth","startDay","startHours","startMinutes","startSeconds","Date","dataChart","forEach","push","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","fill","ChartPage","dateType","setDateType","currentQuotation","setCurrentQuotation","choseCurrentQuotation","month","day","oneMoreDateFormat","App","path","exact","strict","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc8ea394.chunk.js","sourcesContent":["import Navbar from \"./navbar\"\r\nexport default Navbar","import React, {useEffect, useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './navbar.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar() {\r\n\r\n    const [name, setName] = useState(() => {\r\n        return localStorage.getItem('userData') === null ? '' : JSON.parse(localStorage.getItem('userData')).username\r\n    })\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('userData')\r\n        window.location.reload()\r\n    }\r\n\r\n    const settingsItem = () => {\r\n        console.log('here ')\r\n        if (localStorage.getItem('userData') !== null && JSON.parse(localStorage.getItem('userData')).role === 'Admin') {\r\n            return (\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className={window.location.href.includes('company-list') ? \"nav-link dropdown-toggle navbar-item active-link\" : 'nav-link dropdown-toggle navbar-item'}\r\n                       id=\"navbarDropdown\"\r\n                       role=\"button\" data-toggle=\"dropdown\"\r\n                       aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Настройки\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-link-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <Link to={{pathname: '/company-list'}}\r\n                              className={window.location.href.includes('company-list') ? \"dropdown-item navbar-item dropdown-link active-link\" : 'dropdown-item navbar-item dropdown-link'}\r\n                              href=\"#\">Список компаний</Link>\r\n                    </div>\r\n                </li>\r\n            )\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    const navbarAuthorizedAttributes = () => {\r\n        return (\r\n            <div>\r\n                <ul className=\"navbar-nav \">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link navbar-item\" href=\"#\">\r\n                            {name}\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link stick\">\r\n                            |\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link navbar-item loggOut-button\" onClick={logOut}>\r\n                            Выход\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    console.log(name)\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-icon-top navbar-expand-lg navbar-dark bg-dark navbar-links\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse navbar-items\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to={{pathname: '/charts'}}\r\n                                  className={window.location.href.includes('charts') ? \"nav-link navbar-item active-link\" : 'nav-link navbar-item'}>\r\n                                Графики\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={{pathname: '/quotation-list'}}\r\n                                  className={window.location.href.includes('quotation-list') ? \"nav-link navbar-item  active-link\" : 'nav-link navbar-item'}>\r\n                                Котировки\r\n                            </Link>\r\n                        </li>\r\n                        {settingsItem()}\r\n                    </ul>\r\n                    {name.length > 0 ? navbarAuthorizedAttributes() : <div></div>}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import Error from \"./error\"\r\nexport default Error","import React from 'react'\r\n\r\nconst Error = ({errorMessage}) => {\r\n    return (\r\n        <div className={'alert alert-danger'}>\r\n            <strong>{errorMessage}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import UserService from \"./UserService\"\r\nexport default UserService","import axios from \"axios\";\r\n\r\nexport default class UserService {\r\n    _apiBase = '/'\r\n\r\n    authentication = (username, password) => {\r\n        return axios.post(this._apiBase + 'users/authenticate', {\r\n            username,\r\n            password\r\n        }, {\r\n            withCredentials: true\r\n        })\r\n    }\r\n\r\n    getTest = () => {\r\n        const user = JSON.parse(localStorage.getItem('userData'))\r\n        console.log(user.token)\r\n        return axios.get(this._apiBase + 'users/get',  {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + user.token\r\n            }\r\n        })\r\n    }\r\n}","import Authorization from \"./authorization\"\r\nexport default Authorization","import React, {useState, useEffect} from 'react'\r\nimport Navbar from \"../Navbar\"\r\nimport Error from \"../Error\"\r\nimport UserService from \"../../Services/UserService\"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './authorizationWindow.css'\r\n\r\n\r\nexport default function Authorization() {\r\n\r\n    const userService = new UserService()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [activeButton, setActiveButton] = useState(true)\r\n\r\n    const onUsernameChanged = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const onPasswordChanged = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        setActiveButton(false)\r\n        event.preventDefault()\r\n        userService.authentication(username, password)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                localStorage.setItem('userData', JSON.stringify(response.data))\r\n                window.location.reload()\r\n            })\r\n            .catch((e) => {\r\n                console.log('error')\r\n                console.log(e.message)\r\n                if (e.message === 'Request failed with status code 400') {\r\n                    setError('Неправильный логин или пароль')\r\n                }\r\n                setActiveButton(true)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'authorize'}>\r\n            <Navbar/>\r\n            <div className=\"container authorizationForm\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 mx-auto\">\r\n                        <div id=\"first\">\r\n                            <div className=\"myform form \">\r\n                                <div className=\"logo mb-3\">\r\n                                    <h1 className=\"greetingLabel\">Добро пожаловать на биржу</h1>\r\n                                </div>\r\n                                <form action=\"\" method=\"post\" name=\"login\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Логин</label>\r\n                                        <input type=\"text\"\r\n                                               name=\"email\"\r\n                                               className=\"form-control form-input\"\r\n                                               aria-describedby=\"emailHelp\"\r\n                                               value={username}\r\n                                               onChange={onUsernameChanged}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Пароль</label>\r\n                                        <input type=\"password\"\r\n                                               name=\"password\"\r\n                                               className=\"form-control form-input\"\r\n                                               aria-describedby=\"emailHelp\"\r\n                                               value={password}\r\n                                               onChange={onPasswordChanged}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-center \">\r\n                                        <button type=\"submit\" className=\" btn btn-warning btn-primary myBtn disabled-auth\" disabled={!activeButton}>Войти\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                                {error.length > 0 ? <Error errorMessage={error}/> : <></> }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import QuotationService from \"./QuotationService\"\r\nexport default QuotationService","import axios from \"axios\";\r\n\r\nexport default class QuotationService {\r\n\r\n\r\n    _apiBase = '/'\r\n\r\n    getLastQuotations = () => {\r\n        const user = JSON.parse(localStorage.getItem('userData'))\r\n        return axios.get(this._apiBase + 'quotations/get-quotations', {\r\n                withCredentials: true,\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + user.token\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    getQuotationByTickerAndDate = (ticker, startDate, endDate) => {\r\n\r\n        const user = JSON.parse(localStorage.getItem('userData'))\r\n        return axios.post(this._apiBase + 'quotations/get-quotations-by-ticker-and-date',{\r\n            ticker: ticker,\r\n            startDate: startDate,\r\n            endDate: endDate\r\n        }, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + user.token\r\n            }\r\n        })\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport Navbar from \"../Navbar\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './quototations.css'\r\nimport QuotationService from \"../../Services/QuototationService\";\r\n\r\nexport default function QuotationList() {\r\n\r\n    const quotationService = new QuotationService()\r\n\r\n    const [quotations, setQuotations] = useState([])\r\n\r\n    useEffect(() => {\r\n        quotationService.getLastQuotations()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setQuotations(response.data)\r\n            })\r\n            .catch((ex) => {\r\n                console.log(ex.message)\r\n            })\r\n    }, [])\r\n\r\n    const dataFormat = (data) => {\r\n        return data.substring(8, 10) + '.' + data.substring(5, 7) + '.' + data.substring(2, 4)\r\n    }\r\n\r\n    const row = () => {\r\n        return quotations.map(item => {\r\n            return (\r\n                <tr key={item.ticker}>\r\n                    <th scope=\"row\" className=\"quotes-table-company-name\">{item.companyName}</th>\r\n                    <td>{item.ticker}</td>\r\n                    <td>{item.price.toFixed(2)}\r\n                        <div\r\n                            className=\"quotes-table-rub\"> {item.currencyUnit === 'SUR' ? 'RUB' : item.currencyUnit}\r\n                        </div>\r\n                    </td>\r\n                    <td>{dataFormat(item.date)}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"quotes-page\">\r\n                <div className=' quotes-table'>\r\n                    <h1 className=\"quotes\">Котировки</h1>\r\n                    <table className=\"table quote-table-area\">\r\n                        <thead>\r\n                        <tr className=\"quotes-table-head\">\r\n                            <th scope=\"col\" className=\"quotes-table-company-name\">Компания</th>\r\n                            <th scope=\"col\">Тикер</th>\r\n                            <th scope=\"col\">Цена</th>\r\n                            <th scope=\"col\">Дата</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {row()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import CompanyService from \"./CompanyService\"\r\nexport default CompanyService","import axios from \"axios\";\r\n\r\nexport default class CompanyService {\r\n    _apiBase = '/'\r\n\r\n    getCompanies = () => {\r\n        const user = JSON.parse(localStorage.getItem('userData'))\r\n        return axios.get(this._apiBase + 'companies/get-companies', {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + user.token\r\n            }\r\n        })\r\n    }\r\n\r\n    companyPostRequest = (link, id, name, ticker) => {\r\n        const user = JSON.parse(localStorage.getItem('userData'))\r\n        return axios.post(this._apiBase + link, {\r\n            id, name, ticker\r\n        }, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + user.token\r\n            }\r\n        })\r\n    }\r\n\r\n    removeCompany = (id, name, ticker) => {\r\n        return this.companyPostRequest('companies/remove-company', id, name, ticker.toUpperCase().replace(/\\s/g, ''))\r\n    }\r\n\r\n    addCompany = (id, name, ticker) => {\r\n        console.log('sending data ', id, ' ', name, ' ', ticker)\r\n        return this.companyPostRequest('companies/add-company', 1, name, ticker.toUpperCase().replace(/\\s/g, ''))\r\n    }\r\n\r\n    changeCompany = (id, name, ticker) => {\r\n        return this.companyPostRequest('companies/change-company', id, name, ticker.toUpperCase().replace(/\\s/g, ''))\r\n    }\r\n}","import RedactModalWindow from \"./redactModalWindow\"\r\nexport default RedactModalWindow","import React, {useState, useEffect} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './redactModalWindow.css'\r\n\r\nexport default function RedactModalWindow({type, id, name, ticker, changeCompany, addCompany}) {\r\n\r\n    const [companyName, setCompanyName] = useState(name)\r\n    const [companyTicker, setCompanyTicker] = useState(ticker)\r\n    const [buttonClasses, setButtonClasses] = useState(\"btn btn-primary save-button btn-warning first-style-button\")\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCompanyName(name)\r\n        setCompanyTicker(ticker)\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        if (companyName.replace(/\\s/g, '').length == 0 || companyTicker.replace(/\\s/g, '').length == 0) {\r\n            setButtonClasses(\"btn btn-primary save-button btn-warning disabled-button\")\r\n            setDisabled(true)\r\n        } else {\r\n            setButtonClasses(\"btn btn-primary save-button btn-warning first-style-button\")\r\n            setDisabled(false)\r\n        }\r\n    }, [companyTicker, companyName])\r\n\r\n    const onCompanyNameChanged = (event) => {\r\n        setCompanyName(event.target.value)\r\n    }\r\n\r\n    const onCompanyTickerChanged = (event) => {\r\n        setCompanyTicker(event.target.value)\r\n    }\r\n\r\n    const onRedactSubmit = (event) => {\r\n        event.preventDefault()\r\n        changeCompany(id, companyName, companyTicker)\r\n    }\r\n\r\n    const onAddSubmit = (event) => {\r\n        event.preventDefault()\r\n        addCompany(id, companyName, companyTicker)\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"redactModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n             aria-hidden=\"true\" data-toggle=\"modal\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-body\">\r\n                        <h2 className='modalWindowHeader'>{type == 'redact' ? 'Редактирование компании' : 'Добавление компании'}</h2>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label className='input-label-name'>Название компании</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={companyName}\r\n                                    onChange={onCompanyNameChanged}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className='input-label-ticker'>Тикер</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control companyTicker-input\"\r\n                                    value={companyTicker}\r\n                                    onChange={onCompanyTickerChanged}\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\" className={buttonClasses} disabled={disabled}\r\n                                    onClick={type == 'redact' ? onRedactSubmit : onAddSubmit}\r\n                            data-dismiss={'modal'}>Сохранить\r\n                            </button>\r\n                            <button\r\n                                type='button'\r\n                                className=\"btn btn-primary cancel-button btn-warning second-style-button\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                            >Отменить\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import RemoveModalWindow from \"./removeModalWindow\"\r\nexport default RemoveModalWindow","import React from \"react\"\r\nimport './removeModalWindow.css'\r\n\r\nexport default function RemoveModalWindow({id, name, ticker, removeCompany}) {\r\n\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"removeModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n             aria-hidden=\"true\" data-toggle=\"modal\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-body\">\r\n                        <div className='line string'>Удалить компанию <div className='line bold'>{name}</div> из списка?\r\n                        </div>\r\n                        <div className='buttons'>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-warning first-style-button remove-button-modal\"\r\n                                    data-dismiss=\"modal\"\r\n                                    onClick={() => removeCompany(id, name, ticker)}\r\n                            >Удалить\r\n                            </button>\r\n                            <button\r\n                                type='button'\r\n                                className=\"btn btn-primary btn-warning second-style-button cancel-button-modal\"\r\n                                data-dismiss=\"modal\"\r\n                            >Отмена\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import CompanyList from \"./companyList\"\r\nexport default CompanyList","import React, {useState, useEffect} from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './companyList.css'\r\nimport CompanyService from \"../../Services/CompanyService\";\r\nimport RedactModalWindow from \"./RedactModalWindow\";\r\nimport RemoveModalWindow from \"./RemoveModalWindow\";\r\n\r\nexport default function CompanyList() {\r\n\r\n    const companyService = new CompanyService()\r\n\r\n    const [companies, setCompanies] = useState([])\r\n\r\n    const [rowData, setRowData] = useState({\r\n        type: '',\r\n        id: '',\r\n        name: '',\r\n        ticker: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        companyService.getCompanies().then((response) => {\r\n            setCompanies(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const sendRowDataToModalWindow = (type, id, name, ticker) => {\r\n        setRowData({\r\n            type, id, name, ticker\r\n        })\r\n    }\r\n\r\n\r\n    const changeCompany = (id, name, ticker) => {\r\n        companyService.changeCompany(id, name, ticker)\r\n            .then((response) => {\r\n                console.log('company was changed')\r\n                console.log(response.data)\r\n                setCompanies(response.data)\r\n            })\r\n            .catch(() => {\r\n                    alert(\"Такой тикер уже есть в базе данных\")\r\n                }\r\n            )\r\n    }\r\n\r\n    const addCompany = (id, name, ticker) => {\r\n        companyService.addCompany(id, name, ticker)\r\n            .then((response) => {\r\n                setCompanies(response.data)\r\n            })\r\n            .catch(() => {\r\n                alert(\"Такой тикер уже есть в базе данных\")\r\n            })\r\n    }\r\n\r\n    const removeCompany = (id, name, ticker) => {\r\n        companyService.removeCompany(id, name, ticker)\r\n            .then(response => {\r\n                setCompanies(response.data)\r\n            })\r\n            .catch(ex => {\r\n                alert(ex.message)\r\n            })\r\n    }\r\n\r\n\r\n    const row = () => {\r\n        return companies.map(item => {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <th scope=\"row\">{item.name}</th>\r\n                    <td>{item.ticker}</td>\r\n                    <td>\r\n                        <div className=\"buttons-company-list\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning redact-remove-company\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#redactModal\"\r\n                                onClick={() => sendRowDataToModalWindow('redact', item.id, item.name, item.ticker)}\r\n                            >Редактировать\r\n                            </button>\r\n                            |\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning redact-remove-company\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#removeModal\"\r\n                                onClick={() => sendRowDataToModalWindow('remove', item.id, item.name, item.ticker)}\r\n                            >Удалить</button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <RemoveModalWindow id={rowData.id} name={rowData.name} ticker={rowData.ticker}\r\n                               removeCompany={removeCompany}/>\r\n            <RedactModalWindow type={rowData.type} id={rowData.id} name={rowData.name} ticker={rowData.ticker}\r\n                               changeCompany={changeCompany} addCompany={addCompany}/>\r\n            <Navbar/>\r\n            <h1 className=\"companyList\">Список компаний</h1>\r\n            <div className=\"companyListPage\">\r\n                <div className=\"main-content\">\r\n                    <button className=\"btn btn-warning btn-add-company\"\r\n                            onClick={() => sendRowDataToModalWindow('add', '', '', '')}\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#redactModal\"\r\n                    >Добавить компанию\r\n                    </button>\r\n                    <table className=\"table companyList-table\">\r\n                        <thead>\r\n                        <tr className=\"company-list-table-head\">\r\n                            <th scope=\"col\">Компания</th>\r\n                            <th scope=\"col\">Тикер</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {row()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import Chart from \"./chart\"\r\nexport default Chart","import React, {useEffect, useState} from \"react\";\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,} from \"recharts\";\r\nimport QuotationService from \"../../../Services/QuototationService\";\r\nimport {forEach} from \"react-bootstrap/ElementChildren\";\r\n\r\nexport default function Chart({ticker, time}) {\r\n\r\n    const quotationService = new QuotationService()\r\n\r\n    const [quotations, setQuotations] = useState([])\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    const dataFormat = (data) => {\r\n        return data.substring(8, 10) + '.' + data.substring(5, 7) + '.' + data.substring(2, 4)\r\n    }\r\n\r\n    const setDataToChart = (startYear, startMonth, startDay, startHours, startMinutes, startSeconds) => {\r\n\r\n\r\n        const startDate = new Date(startYear,\r\n            startMonth,\r\n            startDay,\r\n            startHours,\r\n            startMinutes,\r\n            startSeconds)\r\n\r\n        const endDate = new Date()\r\n\r\n        console.log(startDate, ' ', endDate)\r\n\r\n        const dataChart = []\r\n\r\n        quotationService.getQuotationByTickerAndDate(ticker, startDate, endDate)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n\r\n                response.data.forEach(item => {\r\n                    dataChart.push({\r\n                        name: dataFormat(item.date),\r\n                        price: item.price\r\n                    })\r\n                })\r\n\r\n                setData(dataChart)\r\n\r\n                setQuotations(response.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ticker && ticker.length > 0) {\r\n\r\n            const date = new Date()\r\n\r\n            if (time === '5m') {\r\n                console.log('5m')\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours(),\r\n                    date.getMinutes() - 5,\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1h') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours() - 1,\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '4h') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours() - 4,\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1w') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay() - 7,\r\n                    date.getHours(),\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1m') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth() - 1,\r\n                    date.getDay(),\r\n                    date.getHours(),\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1y') {\r\n\r\n                setDataToChart(date.getFullYear() - 1,\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours(),\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            }\r\n        }\r\n\r\n    }, [ticker, time])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LineChart\r\n                width={650}\r\n                height={300}\r\n                data={data}\r\n                margin={{\r\n                    top: 0, right: 0, left: 0, bottom: 0,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" fill=\"#8884d8\"/>\r\n            </LineChart>\r\n        </div>\r\n    )\r\n}","import ChartPage from \"./chartPage\"\r\nexport default ChartPage","import React, {useState, useEffect} from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport Navbar from \"../Navbar\";\r\nimport QuotationService from \"../../Services/QuototationService\";\r\nimport './chartPage.css'\r\n\r\n\r\nexport default function ChartPage() {\r\n\r\n    const quotationService = new QuotationService()\r\n\r\n    const [quotations, setQuotations] = useState([])\r\n\r\n    const [dateType, setDateType] = useState('1w')\r\n\r\n    const [currentQuotation, setCurrentQuotation] = useState({\r\n        ticker: '',\r\n        name: '',\r\n        date: '',\r\n        price: '',\r\n        currencyUnit: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        quotationService.getLastQuotations()\r\n            .then(response => {\r\n                setQuotations(response.data)\r\n                setCurrentQuotation(response.data[0])\r\n                choseCurrentQuotation(response.data[0].ticker, response.data[0].companyName,\r\n                    response.data[0].date, response.data[0].price, response.data[0].currencyUnit)\r\n            })\r\n    }, [])\r\n\r\n    const dataFormat = (data) => {\r\n        return data.substring(8, 10) + '.' + data.substring(5, 7) + '.' + data.substring(2, 4)\r\n    }\r\n\r\n    const choseCurrentQuotation = (ticker, name, date, price, currencyUnit) => {\r\n        console.log('current ticker ', ticker)\r\n        console.log('items: ', ticker, ' ', name, ' ', date, ' ', price)\r\n        setCurrentQuotation({\r\n            ticker,\r\n            name,\r\n            date,\r\n            price,\r\n            currencyUnit\r\n        })\r\n    }\r\n\r\n    const row = () => {\r\n        return quotations.map(item => {\r\n            return (\r\n                <tr className={item.ticker === currentQuotation.ticker ? 'row-quote-chart active-row' : 'row-quote-chart'}\r\n                    key={item.ticker}\r\n                    onClick={() => choseCurrentQuotation(item.ticker, item.companyName, item.date, item.price, item.currencyUnit)}>\r\n                    <th className={'ticker-chart'} scope=\"row\">{item.ticker}</th>\r\n                    <th>\r\n                        {item.price}\r\n                        <div\r\n                            className={\"quotes-table-rub\"}> {item.currencyUnit === 'SUR' ? 'RUB' : item.currencyUnit}\r\n                        </div>\r\n                    </th>\r\n\r\n                    <th>{dataFormat(item.date)}</th>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    const oneMoreDateFormat = (date) => {\r\n\r\n        const day = date.substring(0, 1) == '0' ? date.substring(1, 2) : date.substring(0, 1)\r\n        let month;\r\n        switch (date.substring(3, 5)) {\r\n            case '01':\r\n                month = 'января'\r\n                break;\r\n            case '02':\r\n                month = 'февраля'\r\n                break;\r\n            case '03':\r\n                month = 'марта'\r\n                break;\r\n            case '04':\r\n                month = 'апреля'\r\n                break;\r\n            case '05':\r\n                month = 'мая'\r\n                break;\r\n            case '06':\r\n                month = 'июня'\r\n                break;\r\n            case '07':\r\n                month = 'июля'\r\n                break;\r\n            case '08':\r\n                month = 'августа'\r\n                break;\r\n            case '09':\r\n                month = 'сентября'\r\n                break;\r\n            case '10':\r\n                month = 'октября'\r\n                break;\r\n            case '11':\r\n                month = 'ноября'\r\n                break;\r\n            case '12':\r\n                month = 'декабрая'\r\n                break;\r\n        }\r\n\r\n        return day + ' ' + month + ' ' + '20' + date.substring(6, 8)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className={'chart-page'}>\r\n                <div className={'chart-block'}>\r\n                    <div className={'words'}>\r\n                        <div className={'chart-company-name'}>\r\n                            {currentQuotation.name}\r\n                        </div>\r\n                        <div className={'chart-company-ticker'}>\r\n                            ({currentQuotation.ticker})\r\n                        </div>\r\n                        <div>\r\n                            <div className={'chart-company-price'}>\r\n                                {currentQuotation.price}\r\n                            </div>\r\n                            <div className={'chart-company-currencyUnit'}>\r\n                                {currentQuotation.currencyUnit === 'SUR' ? 'RUB' : currentQuotation.currencyUnit}\r\n                            </div>\r\n                            <div className={'chart-company-date'}>\r\n                                {oneMoreDateFormat(dataFormat(currentQuotation.date))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Chart\r\n                        ticker={currentQuotation.ticker}\r\n                        time={dateType}\r\n                    />\r\n                    <div className={'buttons-chart'}>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('5m')}>5 минут\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1h')}>1 час</button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('4h')}>4 часа\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1w')}>1 день\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1m')}>1 неделя\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1y')}>1 месяц\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'}>1 год</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"quotes-page-chart\">\r\n                    <div className='quotes-table-chart'>\r\n                        <table className=\"table quote-table-area-chart\">\r\n                            <thead>\r\n                            <tr className=\"quotes-table-head\">\r\n                                <th className={'talbe-head '} scope=\"col\">Тикер</th>\r\n                                <th className={'talbe-head '} scope=\"col\">Цена</th>\r\n                                <th className={'talbe-head '} scope=\"col\">Дата</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {row()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport Authorization from \"../Authorization\";\nimport QuotationList from \"../QuotationList/quotationList\";\nimport CompanyList from \"../CompanyList\";\nimport ChartPage from \"../ChartPage\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Route path={'/authentication'}>\n                    {localStorage.getItem('userData') === null ? <Authorization/> : <Redirect to={'/quotation-list'}/>}\n                </Route>\n                <Route exact strict path={'/'}>\n                    {localStorage.getItem('userData') === null ? <Authorization/> : <Redirect to={'/quotation-list'}/>}\n                </Route>\n                <Route path={'/company-list'}>\n                    {localStorage.getItem('userData') === null ? <Redirect to={'/authentication'}/> : <CompanyList/>}\n                </Route>\n                <Route path={'/quotation-list'}>\n                    {localStorage.getItem('userData') === null ? <Redirect to={'/authentication'}/> : <QuotationList/>}\n                </Route>\n                <Route path={'/charts'}>\n                    {localStorage.getItem('userData') === null ? <Redirect to={'/authentication'}/> : <ChartPage/>}\n                </Route>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}