{"version":3,"sources":["components/Navbar/index.js","components/Navbar/navbar.js","components/Error/index.js","components/Error/error.js","Services/UserService/index.js","Services/UserService/UserService.js","components/Authorization/index.js","components/Authorization/authorization.js","Services/QuototationService/index.js","Services/QuototationService/QuotationService.js","components/QuotationList/quotationList.js","Services/CompanyService/index.js","Services/CompanyService/CompanyService.js","components/CompanyList/RedactModalWindow/index.js","components/CompanyList/RedactModalWindow/redactModalWindow.js","components/CompanyList/RemoveModalWindow/index.js","components/CompanyList/RemoveModalWindow/removeModalWindow.js","components/CompanyList/index.js","components/CompanyList/companyList.js","components/ChartPage/Chart/index.js","components/ChartPage/Chart/chart.js","components/ChartPage/index.js","components/ChartPage/chartPage.js","components/App/App.js","index.js"],"names":["Navbar","useState","localStorage","getItem","JSON","parse","username","name","history","useHistory","location","useLocation","logOut","removeItem","go","url","pathname","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","role","aria-haspopup","aria-labelledby","length","href","onClick","Error","errorMessage","UserService","_apiBase","bcrypt","require","authentication","password","a","getSalt","then","response","buffer","Uint8Array","data","backendSalt","convertToBase64","randomBytes","generateRandomBytes","clientSalt","hashedPassword","hashSync","axios","post","salt","responseType","withCredentials","bytes","window","crypto","getRandomValues","toEncode","forEach","item","String","fromCharCode","btoa","Authorization","userService","setUsername","setPassword","error","setError","activeButton","setActiveButton","action","method","onSubmit","event","preventDefault","replace","setItem","stringify","catch","e","message","aria-describedby","value","onChange","target","disabled","QuotationService","getLastQuotations","get","headers","getQuotationByTickerAndDate","ticker","startDate","endDate","QuotationList","quotationService","quotations","setQuotations","useEffect","scope","map","companyName","price","toFixed","currencyUnit","date","substring","CompanyService","getCompanies","user","token","companyPostRequest","link","removeCompany","toUpperCase","addCompany","changeCompany","RedactModalWindow","setCompanyName","companyTicker","setCompanyTicker","buttonClasses","setButtonClasses","setDisabled","tabIndex","aria-hidden","data-dismiss","RemoveModalWindow","CompanyList","companyService","companies","setCompanies","rowData","setRowData","sendRowDataToModalWindow","oldCompanies","filter","ex","alert","changedCompanies","changedCompany","i","company","Chart","time","setData","dataFormat","setDataToChart","startYear","startMonth","startDay","startHours","startMinutes","startSeconds","Date","console","log","dataChart","push","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","fill","ChartPage","dateType","setDateType","currentQuotation","setCurrentQuotation","choseCurrentQuotation","month","day","oneMoreDateFormat","App","path","exact","strict","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a10b62f3.chunk.js","sourcesContent":["import Navbar from \"./navbar\"\r\nexport default Navbar","import React, {useEffect, useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './navbar.css'\r\nimport {Link, useLocation, useHistory} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar() {\r\n\r\n    const [name, setName] = useState(() => {\r\n        return localStorage.getItem('userData') === null ? '' : JSON.parse(localStorage.getItem('userData')).username\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    const location = useLocation()\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('userData')\r\n        history.go(0)\r\n    }\r\n\r\n    const url = location.pathname\r\n\r\n    const settingsItem = () => {\r\n        if (localStorage.getItem('userData') !== null && JSON.parse(localStorage.getItem('userData')).role === 'Admin') {\r\n            return (\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className={url === '/company-list' ? \"nav-link dropdown-toggle navbar-item active-link\" : 'nav-link dropdown-toggle navbar-item'}\r\n                       id=\"navbarDropdown\"\r\n                       role=\"button\" data-toggle=\"dropdown\"\r\n                       aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Настройки\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-link-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <Link to={{pathname: '/company-list'}}\r\n                              className={url === '/company-list' ? \"dropdown-item navbar-item dropdown-link active-link\" : 'dropdown-item navbar-item dropdown-link'}\r\n                              >Список компаний</Link>\r\n                    </div>\r\n                </li>\r\n            )\r\n        } else {\r\n            return <></>\r\n        }\r\n    }\r\n\r\n    const navbarAuthorizedAttributes = () => {\r\n        return (\r\n            <div>\r\n                <ul className=\"navbar-nav \">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link navbar-item\" href=\"#\">\r\n                            {name}\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link stick\">\r\n                            |\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link navbar-item loggOut-button\" onClick={logOut}>\r\n                            Выход\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const navbarAuthorizationLink = () => (<div>\r\n        <ul className=\"navbar-nav \">\r\n            <li className={'nav-item'}>\r\n                <Link to={{pathname: '/authentication'}}\r\n                        className={url === '/authentication' ? \"nav-link navbar-item  active-link\" : 'nav-link navbar-item'}\r\n                >Войти</Link>\r\n            </li>\r\n        </ul>\r\n    </div>)\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-icon-top navbar-expand-lg navbar-dark bg-dark navbar-links\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse navbar-items\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to={{pathname: '/charts'}}\r\n                                  className={url ==='/charts' ? \"nav-link navbar-item active-link\" : 'nav-link navbar-item'}>\r\n                                Графики\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={{pathname: '/quotation-list'}}\r\n                                  className={url ==='/quotation-list' ? \"nav-link navbar-item  active-link\" : 'nav-link navbar-item'}>\r\n                                Котировки\r\n                            </Link>\r\n                        </li>\r\n                        {settingsItem()}\r\n                    </ul>\r\n                    {name.length > 0 ? navbarAuthorizedAttributes() : navbarAuthorizationLink()}\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import Error from \"./error\"\r\nexport default Error","import React from 'react'\r\n\r\nconst Error = ({errorMessage}) => {\r\n    return (\r\n        <div className={'alert alert-danger'}>\r\n            <strong>{errorMessage}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import UserService from \"./UserService\"\r\nexport default UserService","import axios from \"axios\"\r\nimport pbkdf2 from 'crypto-js/pbkdf2'\r\n\r\n\r\nexport default class UserService {\r\n    _apiBase = 'https://localhost:5001/'\r\n\r\n    bcrypt = require('bcryptjs');\r\n\r\n    authentication = async (username, password) => {\r\n\r\n        return this.getSalt(username)\r\n            .then(response => {\r\n                const buffer = new Uint8Array(response.data)\r\n                const backendSalt = this.convertToBase64(buffer)\r\n                const randomBytes = this.generateRandomBytes()\r\n                const clientSalt = this.convertToBase64(randomBytes)\r\n\r\n\r\n                password = password + backendSalt + clientSalt\r\n\r\n                const hashedPassword = this.bcrypt.hashSync(password, 10)\r\n\r\n                return axios.post(this._apiBase + 'users/authenticate', {\r\n                    username,\r\n                    password: hashedPassword,\r\n                    salt: clientSalt\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    getSalt = async (username) => {\r\n        return axios.post(this._apiBase + 'users/get-salt', {\r\n            username\r\n        }, {\r\n            responseType: 'arraybuffer',\r\n            withCredentials: true\r\n        })\r\n    }\r\n\r\n    generateRandomBytes = () => {\r\n        const bytes = new Uint8Array(16)\r\n        window.crypto.getRandomValues(bytes)\r\n        return bytes\r\n    }\r\n\r\n    convertToBase64 = (bytes) => {\r\n\r\n        let toEncode = ''\r\n\r\n        bytes.forEach(item => {\r\n            toEncode += (String.fromCharCode(item))\r\n        })\r\n\r\n        return window.btoa(toEncode)\r\n    }\r\n}","import Authorization from \"./authorization\"\r\nexport default Authorization","import React, {useState, useEffect} from 'react'\r\nimport Navbar from \"../Navbar\"\r\nimport Error from \"../Error\"\r\nimport UserService from \"../../Services/UserService\"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './authorizationWindow.css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport default function Authorization() {\r\n\r\n    const userService = new UserService()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [activeButton, setActiveButton] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const onUsernameChanged = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const onPasswordChanged = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        event.preventDefault()\r\n        if (username.replace(/\\s/g, '').length > 0\r\n            && password.replace(/\\s/g, '').length > 0) {\r\n            setActiveButton(false)\r\n            userService.authentication(username, password)\r\n                .then((response) => {\r\n                    localStorage.setItem('userData', JSON.stringify(response.data))\r\n                    history.go(0)\r\n                })\r\n                .catch((e) => {\r\n                    if (e.response) {\r\n                        setError(e.response.data)\r\n                    } else {\r\n                        setError(e.message)\r\n                    }\r\n\r\n                    setActiveButton(true)\r\n                })\r\n        } else {\r\n            setError('Please fill password and login field')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'authorize'}>\r\n            <Navbar/>\r\n            <div className=\"container authorizationForm\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 mx-auto\">\r\n                        <div id=\"first\">\r\n                            <div className=\"myform form \">\r\n                                <div className=\"logo mb-3\">\r\n                                    <h1 className=\"greetingLabel\">Добро пожаловать на биржу</h1>\r\n                                </div>\r\n                                <form action=\"\" method=\"post\" name=\"login\" onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Логин</label>\r\n                                        <input type=\"text\"\r\n                                               name=\"email\"\r\n                                               className=\"form-control form-input\"\r\n                                               aria-describedby=\"emailHelp\"\r\n                                               value={username}\r\n                                               onChange={onUsernameChanged}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Пароль</label>\r\n                                        <input type=\"password\"\r\n                                               name=\"password\"\r\n                                               className=\"form-control form-input\"\r\n                                               aria-describedby=\"emailHelp\"\r\n                                               value={password}\r\n                                               onChange={onPasswordChanged}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-center \">\r\n                                        <button type=\"submit\" className=\" btn btn-warning btn-primary myBtn disabled-auth\" disabled={!activeButton}>Войти\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                                {error.length > 0 ? <Error errorMessage={error}/> : <></> }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import QuotationService from \"./QuotationService\"\r\nexport default QuotationService","import axios from \"axios\";\r\n\r\nexport default class QuotationService {\r\n\r\n\r\n    _apiBase = 'https://localhost:5001/'\r\n\r\n    getLastQuotations = () => {\r\n        return axios.get(this._apiBase + 'quotations/get-quotations', {\r\n                withCredentials: true,\r\n                headers: {\r\n                    \"Accept\": \"application/json\"\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    getQuotationByTickerAndDate = (ticker, startDate, endDate) => {\r\n\r\n        return axios.post(this._apiBase + 'quotations/get-quotations-by-ticker-and-date',{\r\n            ticker: ticker,\r\n            startDate: startDate,\r\n            endDate: endDate\r\n        }, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        })\r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport Navbar from \"../Navbar\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './quototations.css'\r\nimport QuotationService from \"../../Services/QuototationService\";\r\nimport Error from \"../Error\";\r\n\r\nexport default function QuotationList() {\r\n\r\n    const quotationService = new QuotationService()\r\n\r\n    const [quotations, setQuotations] = useState([])\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        quotationService.getLastQuotations()\r\n            .then(response => {\r\n                setQuotations(response.data)\r\n            })\r\n            .catch((e) => {\r\n                if (e.response) {\r\n                    setError(e.response.data)\r\n                } else {\r\n                    setError(e.message)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const dataFormat = (data) => {\r\n        return data.substring(8, 10) + '.' + data.substring(5, 7) + '.' + data.substring(2, 4)\r\n    }\r\n\r\n    const row = () => {\r\n        return quotations.map(item => {\r\n            return (\r\n                <tr key={item.ticker}>\r\n                    <th scope=\"row\" className=\"quotes-table-company-name\">{item.companyName}</th>\r\n                    <td>{item.ticker}</td>\r\n                    <td>{item.price.toFixed(2)}\r\n                        <div\r\n                            className=\"quotes-table-rub\"> {item.currencyUnit === 'SUR' ? 'RUB' : item.currencyUnit}\r\n                        </div>\r\n                    </td>\r\n                    <td>{dataFormat(item.date)}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            {error.length > 0 ? <Error errorMessage={error}/> : (<div className=\"quotes-page\">\r\n                <div className=' quotes-table'>\r\n                    <h1 className=\"quotes\">Котировки</h1>\r\n                    <table className=\"table quote-table-area\">\r\n                        <thead>\r\n                        <tr className=\"quotes-table-head\">\r\n                            <th scope=\"col\" className=\"quotes-table-company-name\">Компания</th>\r\n                            <th scope=\"col\">Тикер</th>\r\n                            <th scope=\"col\">Цена</th>\r\n                            <th scope=\"col\">Дата</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {row()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}","import CompanyService from \"./CompanyService\"\r\nexport default CompanyService","import axios from \"axios\";\r\n\r\nexport default class CompanyService {\r\n    _apiBase = 'https://localhost:5001/'\r\n\r\n    getCompanies = () => {\r\n        const user = JSON.parse(localStorage.getItem('userData'))\r\n        return axios.get(this._apiBase + 'companies/get-companies', {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + user.token\r\n            }\r\n        })\r\n    }\r\n\r\n    companyPostRequest = (link, id, name, ticker) => {\r\n        const user = JSON.parse(localStorage.getItem('userData'))\r\n        return axios.post(this._apiBase + link, {\r\n            id, name, ticker\r\n        }, {\r\n            withCredentials: true,\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + user.token\r\n            }\r\n        })\r\n    }\r\n\r\n    removeCompany = (id, name, ticker) => {\r\n        return this.companyPostRequest('companies/remove-company', id, name, ticker.toUpperCase().replace(/\\s/g, ''))\r\n    }\r\n\r\n    addCompany = (id, name, ticker) => {\r\n        return this.companyPostRequest('companies/add-company', 1, name, ticker.toUpperCase().replace(/\\s/g, ''))\r\n    }\r\n\r\n    changeCompany = (id, name, ticker) => {\r\n        return this.companyPostRequest('companies/change-company', id, name, ticker.toUpperCase().replace(/\\s/g, ''))\r\n    }\r\n}","import RedactModalWindow from \"./redactModalWindow\"\r\nexport default RedactModalWindow","import React, {useState, useEffect} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './redactModalWindow.css'\r\nimport Error from \"../../Error\";\r\n\r\nexport default function RedactModalWindow({type, id, name, ticker, changeCompany, addCompany}) {\r\n\r\n    const [companyName, setCompanyName] = useState(name)\r\n    const [companyTicker, setCompanyTicker] = useState(ticker)\r\n    const [buttonClasses, setButtonClasses] = useState(\"btn btn-primary save-button btn-warning first-style-button\")\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCompanyName(name)\r\n        setCompanyTicker(ticker)\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        if (companyName.replace(/\\s/g, '').length == 0 || companyTicker.replace(/\\s/g, '').length == 0) {\r\n            setButtonClasses(\"btn btn-primary save-button btn-warning disabled-button\")\r\n            setDisabled(true)\r\n        } else {\r\n            setButtonClasses(\"btn btn-primary save-button btn-warning first-style-button\")\r\n            setDisabled(false)\r\n        }\r\n    }, [companyTicker, companyName])\r\n\r\n    const onCompanyNameChanged = (event) => {\r\n        setCompanyName(event.target.value)\r\n    }\r\n\r\n    const onCompanyTickerChanged = (event) => {\r\n        setCompanyTicker(event.target.value)\r\n    }\r\n\r\n    const onRedactSubmit = (event) => {\r\n        event.preventDefault()\r\n        changeCompany(id, companyName, companyTicker)\r\n    }\r\n\r\n    const onAddSubmit = (event) => {\r\n        event.preventDefault()\r\n        addCompany(id, companyName, companyTicker)\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"redactModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n             aria-hidden=\"true\" data-toggle=\"modal\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-body\">\r\n                        <h2 className='modalWindowHeader'>{type == 'redact' ? 'Редактирование компании' : 'Добавление компании'}</h2>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label className='input-label-name'>Название компании</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={companyName}\r\n                                    onChange={onCompanyNameChanged}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className='input-label-ticker'>Тикер</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control companyTicker-input\"\r\n                                    value={companyTicker}\r\n                                    onChange={onCompanyTickerChanged}\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\" className={buttonClasses} disabled={disabled}\r\n                                    onClick={type == 'redact' ? onRedactSubmit : onAddSubmit}\r\n                            data-dismiss={'modal'}>Сохранить\r\n                            </button>\r\n                            <button\r\n                                type='button'\r\n                                className=\"btn btn-primary cancel-button btn-warning second-style-button\"\r\n                                aria-label=\"Close\"\r\n                                data-dismiss=\"modal\"\r\n                            >Отменить\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import RemoveModalWindow from \"./removeModalWindow\"\r\nexport default RemoveModalWindow","import React from \"react\"\r\nimport './removeModalWindow.css'\r\n\r\nexport default function RemoveModalWindow({id, name, ticker, removeCompany}) {\r\n\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"removeModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n             aria-hidden=\"true\" data-toggle=\"modal\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-body\">\r\n                        <div className='line string'>Удалить компанию <div className='line bold'>{name}</div> из списка?\r\n                        </div>\r\n                        <div className='buttons'>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-warning first-style-button remove-button-modal\"\r\n                                    data-dismiss=\"modal\"\r\n                                    onClick={() => removeCompany(id, name, ticker)}\r\n                            >Удалить\r\n                            </button>\r\n                            <button\r\n                                type='button'\r\n                                className=\"btn btn-primary btn-warning second-style-button cancel-button-modal\"\r\n                                data-dismiss=\"modal\"\r\n                            >Отмена\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import CompanyList from \"./companyList\"\r\nexport default CompanyList","import React, {useState, useEffect} from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport './companyList.css'\r\nimport CompanyService from \"../../Services/CompanyService\";\r\nimport RedactModalWindow from \"./RedactModalWindow\";\r\nimport RemoveModalWindow from \"./RemoveModalWindow\";\r\nimport Error from \"../Error\"\r\n\r\nexport default function CompanyList() {\r\n\r\n    const companyService = new CompanyService()\r\n\r\n    const [companies, setCompanies] = useState([])\r\n\r\n    const [error, setError] = useState('')\r\n\r\n    const [rowData, setRowData] = useState({\r\n        type: '',\r\n        id: '',\r\n        name: '',\r\n        ticker: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        companyService.getCompanies().then((response) => {\r\n            setCompanies(response.data)\r\n        })\r\n            .catch(e => {\r\n                if (e.response) {\r\n                    setError(e.response.data)\r\n                } else {\r\n                    setError(e.message)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const sendRowDataToModalWindow = (type, id, name, ticker) => {\r\n        setRowData({\r\n            type, id, name, ticker\r\n        })\r\n    }\r\n\r\n\r\n    const changeCompany = (id, name, ticker) => {\r\n        companyService.changeCompany(id, name, ticker)\r\n            .then((response) => {\r\n\r\n                const changedCompanies = [...companies]\r\n\r\n                const changedCompany = {\r\n                    id: response.data.id,\r\n                    name: response.data.name,\r\n                    ticker: response.data.ticker\r\n                }\r\n\r\n                for (let i = 0; i < changedCompanies.length; i++) {\r\n                    if (changedCompanies[i].id === changedCompany.id) {\r\n                        changedCompanies[i] = changedCompany\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                setCompanies(changedCompanies)\r\n\r\n            })\r\n            .catch((e) => {\r\n                    if (e.response) {\r\n                        alert(e.response.data)\r\n                    } else {\r\n                        alert(e.message)\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    const addCompany = (id, name, ticker) => {\r\n        companyService.addCompany(id, name, ticker)\r\n            .then((response) => {\r\n                const company = {\r\n                    id: response.data.id,\r\n                    name: response.data.name,\r\n                    ticker: response.data.ticker\r\n                }\r\n                setCompanies(oldCompanies => [...oldCompanies, company])\r\n            })\r\n            .catch((e) => {\r\n                if (e.response) {\r\n                    alert(e.response.data)\r\n                } else {\r\n                    alert(e.message)\r\n                }\r\n            })\r\n    }\r\n\r\n    const removeCompany = (id, name, ticker) => {\r\n        companyService.removeCompany(id, name, ticker)\r\n            .then(response => {\r\n                const oldCompanies = [...companies].filter(item => item.id !== response.data.id)\r\n                setCompanies(oldCompanies)\r\n            })\r\n            .catch(ex => {\r\n                alert(ex.message)\r\n            })\r\n    }\r\n\r\n\r\n    const row = () => {\r\n        return companies.map(item => {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <th scope=\"row\">{item.name}</th>\r\n                    <td>{item.ticker}</td>\r\n                    <td>\r\n                        <div className=\"buttons-company-list\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning redact-remove-company\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#redactModal\"\r\n                                onClick={() => sendRowDataToModalWindow('redact', item.id, item.name, item.ticker)}\r\n                            >Редактировать\r\n                            </button>\r\n                            |\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning redact-remove-company\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#removeModal\"\r\n                                onClick={() => sendRowDataToModalWindow('remove', item.id, item.name, item.ticker)}\r\n                            >Удалить</button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    if (error.length > 0) {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Error errorMessage={error}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <RemoveModalWindow id={rowData.id} name={rowData.name} ticker={rowData.ticker}\r\n                               removeCompany={removeCompany}/>\r\n            <RedactModalWindow type={rowData.type} id={rowData.id} name={rowData.name} ticker={rowData.ticker}\r\n                               changeCompany={changeCompany} addCompany={addCompany}/>\r\n            <h1 className=\"companyList\">Список компаний</h1>\r\n            <div className=\"companyListPage\">\r\n                <div className=\"main-content\">\r\n                    <button className=\"btn btn-warning btn-add-company\"\r\n                            onClick={() => sendRowDataToModalWindow('add', '', '', '')}\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#redactModal\"\r\n                    >Добавить компанию\r\n                    </button>\r\n                    <table className=\"table companyList-table\">\r\n                        <thead>\r\n                        <tr className=\"company-list-table-head\">\r\n                            <th scope=\"col\">Компания</th>\r\n                            <th scope=\"col\">Тикер</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {row()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import Chart from \"./chart\"\r\nexport default Chart","import React, {useEffect, useState} from \"react\";\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,} from \"recharts\";\r\nimport QuotationService from \"../../../Services/QuototationService\";\r\nimport {forEach} from \"react-bootstrap/ElementChildren\";\r\n\r\nexport default function Chart({ticker, time}) {\r\n\r\n    const quotationService = new QuotationService()\r\n\r\n    const [quotations, setQuotations] = useState([])\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    const dataFormat = (data) => {\r\n        return data.substring(8, 10) + '.' + data.substring(5, 7) + '.' + data.substring(2, 4)\r\n    }\r\n\r\n    const setDataToChart = (startYear, startMonth, startDay, startHours, startMinutes, startSeconds) => {\r\n\r\n\r\n        const startDate = new Date(startYear,\r\n            startMonth,\r\n            startDay,\r\n            startHours,\r\n            startMinutes,\r\n            startSeconds)\r\n\r\n        const endDate = new Date()\r\n\r\n        console.log(startDate, ' ', endDate)\r\n\r\n        const dataChart = []\r\n\r\n        quotationService.getQuotationByTickerAndDate(ticker, startDate, endDate)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n\r\n                response.data.forEach(item => {\r\n                    dataChart.push({\r\n                        name: dataFormat(item.date),\r\n                        price: item.price\r\n                    })\r\n                })\r\n\r\n                setData(dataChart)\r\n\r\n                setQuotations(response.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ticker && ticker.length > 0) {\r\n\r\n            const date = new Date()\r\n\r\n            if (time === '5m') {\r\n                console.log('5m')\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours(),\r\n                    date.getMinutes() - 5,\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1h') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours() - 1,\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '4h') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours() - 4,\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1w') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth(),\r\n                    date.getDay() - 7,\r\n                    date.getHours(),\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1m') {\r\n\r\n                setDataToChart(date.getFullYear(),\r\n                    date.getMonth() - 1,\r\n                    date.getDay(),\r\n                    date.getHours(),\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n\r\n            } else if (time === '1y') {\r\n\r\n                setDataToChart(date.getFullYear() - 1,\r\n                    date.getMonth(),\r\n                    date.getDay(),\r\n                    date.getHours(),\r\n                    date.getMinutes(),\r\n                    date.getSeconds())\r\n            }\r\n        }\r\n\r\n    }, [ticker, time])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <LineChart\r\n                width={650}\r\n                height={300}\r\n                data={data}\r\n                margin={{\r\n                    top: 0, right: 0, left: 0, bottom: 0,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <Tooltip/>\r\n                <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" fill=\"#8884d8\"/>\r\n            </LineChart>\r\n        </div>\r\n    )\r\n}","import ChartPage from \"./chartPage\"\r\nexport default ChartPage","import React, {useState, useEffect} from \"react\";\r\nimport Chart from \"./Chart\";\r\nimport Navbar from \"../Navbar\";\r\nimport QuotationService from \"../../Services/QuototationService\";\r\nimport './chartPage.css'\r\nimport Error from \"../Error\"\r\n\r\n\r\nexport default function ChartPage() {\r\n\r\n    const quotationService = new QuotationService()\r\n\r\n    const [quotations, setQuotations] = useState([])\r\n\r\n    const [dateType, setDateType] = useState('1w')\r\n    const [error, setError] = useState('')\r\n\r\n    const [currentQuotation, setCurrentQuotation] = useState({\r\n        ticker: '',\r\n        name: '',\r\n        date: '',\r\n        price: '',\r\n        currencyUnit: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        quotationService.getLastQuotations()\r\n            .then(response => {\r\n                setQuotations(response.data)\r\n                setCurrentQuotation(response.data[0])\r\n                choseCurrentQuotation(response.data[0].ticker, response.data[0].companyName,\r\n                    response.data[0].date, response.data[0].price, response.data[0].currencyUnit)\r\n            })\r\n            .catch(e => {\r\n                if (e.response) {\r\n                    setError(e.response.data)\r\n                } else {\r\n                    setError(e.message)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const dataFormat = (data) => {\r\n        return data.substring(8, 10) + '.' + data.substring(5, 7) + '.' + data.substring(2, 4)\r\n    }\r\n\r\n    const choseCurrentQuotation = (ticker, name, date, price, currencyUnit) => {\r\n        setCurrentQuotation({\r\n            ticker,\r\n            name,\r\n            date,\r\n            price,\r\n            currencyUnit\r\n        })\r\n    }\r\n\r\n    const row = () => {\r\n        return quotations.map(item => {\r\n            return (\r\n                <tr className={item.ticker === currentQuotation.ticker ? 'row-quote-chart active-row' : 'row-quote-chart'}\r\n                    key={item.ticker}\r\n                    onClick={() => choseCurrentQuotation(item.ticker, item.companyName, item.date, item.price, item.currencyUnit)}>\r\n                    <th className={'ticker-chart'} scope=\"row\">{item.ticker}</th>\r\n                    <th>\r\n                        {item.price}\r\n                        <div\r\n                            className={\"quotes-table-rub\"}> {item.currencyUnit === 'SUR' ? 'RUB' : item.currencyUnit}\r\n                        </div>\r\n                    </th>\r\n\r\n                    <th>{dataFormat(item.date)}</th>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    const oneMoreDateFormat = (date) => {\r\n\r\n        const day = date.substring(0, 1) == '0' ? date.substring(1, 2) : date.substring(0, 1)\r\n        let month;\r\n        switch (date.substring(3, 5)) {\r\n            case '01':\r\n                month = 'января'\r\n                break;\r\n            case '02':\r\n                month = 'февраля'\r\n                break;\r\n            case '03':\r\n                month = 'марта'\r\n                break;\r\n            case '04':\r\n                month = 'апреля'\r\n                break;\r\n            case '05':\r\n                month = 'мая'\r\n                break;\r\n            case '06':\r\n                month = 'июня'\r\n                break;\r\n            case '07':\r\n                month = 'июля'\r\n                break;\r\n            case '08':\r\n                month = 'августа'\r\n                break;\r\n            case '09':\r\n                month = 'сентября'\r\n                break;\r\n            case '10':\r\n                month = 'октября'\r\n                break;\r\n            case '11':\r\n                month = 'ноября'\r\n                break;\r\n            case '12':\r\n                month = 'декабрая'\r\n                break;\r\n        }\r\n\r\n        return day + ' ' + month + ' ' + '20' + date.substring(6, 8)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            {error.length > 0 ? <Error errorMessage={error}/> : (<div className={'chart-page'}>\r\n                <div className={'chart-block'}>\r\n                    <div className={'words'}>\r\n                        <div className={'chart-company-name'}>\r\n                            {currentQuotation.name}\r\n                        </div>\r\n                        <div className={'chart-company-ticker'}>\r\n                            ({currentQuotation.ticker})\r\n                        </div>\r\n                        <div>\r\n                            <div className={'chart-company-price'}>\r\n                                {currentQuotation.price}\r\n                            </div>\r\n                            <div className={'chart-company-currencyUnit'}>\r\n                                {currentQuotation.currencyUnit === 'SUR' ? 'RUB' : currentQuotation.currencyUnit}\r\n                            </div>\r\n                            <div className={'chart-company-date'}>\r\n                                {oneMoreDateFormat(dataFormat(currentQuotation.date))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Chart\r\n                        ticker={currentQuotation.ticker}\r\n                        time={dateType}\r\n                    />\r\n                    <div className={'buttons-chart'}>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('5m')}>5 минут\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1h')}>1 час</button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('4h')}>4 часа\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1w')}>1 день\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1w')}>1 неделя\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1m')}>1 месяц\r\n                        </button>\r\n                        <button className={'btn btn-warning btn-chart'} onClick={() => setDateType('1y')}>1 год</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"quotes-page-chart\">\r\n                    <div className='quotes-table-chart'>\r\n                        <table className=\"table quote-table-area-chart\">\r\n                            <thead>\r\n                            <tr className=\"quotes-table-head\">\r\n                                <th className={'talbe-head '} scope=\"col\">Тикер</th>\r\n                                <th className={'talbe-head '} scope=\"col\">Цена</th>\r\n                                <th className={'talbe-head '} scope=\"col\">Дата</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {row()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>)}\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport Authorization from \"../Authorization\";\nimport QuotationList from \"../QuotationList/quotationList\";\nimport CompanyList from \"../CompanyList\";\nimport ChartPage from \"../ChartPage\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Route path={'/authentication'}>\n                    {localStorage.getItem('userData') === null ? <Authorization/> :\n                        <Redirect to={'/quotation-list'}/>}\n                </Route>\n                <Route exact strict path={'/'}>\n                    {localStorage.getItem('userData') === null ? <Authorization/> :\n                        <Redirect to={'/quotation-list'}/>}\n                </Route>\n                <Route path={'/company-list'}>\n                    {localStorage.getItem('userData') === null ? <Redirect to={'/authentication'}/> :\n                        <CompanyList/>}\n                </Route>\n                <Route path={'/quotation-list'}>\n                    <QuotationList/>\n                </Route>\n                <Route path={'/charts'}>\n                    <ChartPage/>\n                </Route>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}